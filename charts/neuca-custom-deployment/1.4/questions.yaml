rancher_min_version: 2.7.5
questions:
- variable: global.vllm
  label: "vLLM Deployment"
  group: "Global Settings"
  default: false
  type: boolean
  show_subquestion_if: false
  subquestions:
  - variable: customStartupScript
    label: "Startup Script"
    group: "Custom Deployment Startup Script"
    type: "multiline"
    description: |
      "examples: "
      "/usr/sbin/sshd -De"
      "vllm serve speakleash/Bielik-11B-v2.3-Instruct --trust-remote-code --enable-chunked-prefill --max_num_batched_tokens 1024 --api-key $API_KEY"
    default: |
      mkdir -p /root/.ssh
      chmod 700 /root/.ssh
      mkdir /var/run/sshd # bug in 22.04
      /usr/sbin/sshd -De
    required: true
  - variable: image.customImage
    label: "Image"
    group: "Image"
    default: "aiprdkir.ai.neuca.pl/library/cuda:12-2-cudnn-8.9.7-v1"
    required: true
    type: string
    description: "image for custom deployment"
  - variable: global.ssh
    label: "Enable ssh"
    group: "Global Settings"
    default: true
    type: boolean
    show_subquestion_if: true
    subquestions:
    - variable: global.kubectlImage
      label: "Kubectl Image"
      description: "Image required to start job creating ssh keys secret"
      group: "Global Settings"
      default: "aiprdkir.ai.neuca.pl/docker.io/bitnami/kubectl:latest"
      type: string
- variable: vllmStartupScript
  label: "Startup Script"
  group: "vLLM Startup Script"
  type: "multiline"
  show_if: "global.vllm=true"
  description: |
    "examples: "
    "/usr/sbin/sshd -De"
    "vllm serve speakleash/Bielik-11B-v2.3-Instruct --trust-remote-code --enable-chunked-prefill --max_num_batched_tokens 1024 --api-key $API_KEY"
  default: |
    vllm serve speakleash/Bielik-11B-v2.3-Instruct --trust-remote-code --enable-chunked-prefill --max_num_batched_tokens 1024 --api-key $API_KEY
  required: true
- variable: global.nodeSelectorEnabled
  label: "Node Selector"
  group: "Global Settings"
  default: true
  type: boolean
  show_subquestion_if: true
  subquestions:
  - variable: global.nodeSelector
    group: "Global Settings"
    label: "Node Selector"
    description: "Available values for nvidia.com/gpu.product are: NVIDIA-H100-NVL, NVIDIA-L40S"
    default:
      nvidia.com/gpu.present: "true"
      nvidia.com/gpu.product: "NVIDIA-H100-NVL"
    type: "map"
    required: true
- variable: image.vllmImage
  label: "Image"
  group: "Image"
  default: "aiprdkir.ai.neuca.pl/docker.io/vllm/vllm-openai:latest"
  required: true
  show_if: "global.vllm=true"
  type: string
  description: "image for vllm"
- variable: envEnabled
  label: "Enable pod environment variables"
  group: "Environment"
  default: true
  type: boolean
  show_subquestion_if: true
  subquestions:
  - variable: env
    group: "Environment"
    label: "Environment Variables"
    description: "Environment Variables"
    default:
      env1: "value of env1"
    type: "map"
    required: false
- variable: envFromSecretEnabled
  label: "Enable pod environment variables, created from secrets"
  group: "Environment"
  default: true
  type: boolean
  show_subquestion_if: true
  subquestions:
  - variable: envFromSecret
    group: "Environment"
    label: "Environment Variables"
    description: |
      Give environmet variable definition in format: key="variable-name", value="secret-name:secret-key"  
      The referenced secreats must exist before release creation
    default:
      API_KEY: "bielik-secrets:api-key"
      HUGGING_FACE_HUB_TOKEN: "bielik-secrets:token"
    type: "map"
    required: false
- variable: resourcesEnabled
  label: "Enable pod resources decaration"
  group: "Resources"
  default: true
  type: boolean
  show_subquestion_if: true
  subquestions:
  - variable: resources
    group: "Resources"
    label: "Resources"
    description: "Requested resources"
    default:
      cpu: "100m"
      memory: "128Mi"
      nvidia.com/gpu: "1"
    type: "map"
    required: false
- variable: storage.enabled
  label: "Pod Storage"
  description: "Set up pod storage - storage will be created and delated with this realease"
  default: true
  type: boolean
  group: "Storage"
  show_subquestion_if: true
  subquestions:
  - variable: storage.storageSize
    label: "Storage Size"
    default: "10Gi"
    type: string
    required: true
  - variable: storage.mountPath
    default: "/data"
    label: "Mount Point"
    type: string
    required: true
  - variable: storage.storageClassName
    label: "Storage Class Name"
    default: ""
    type: string
    required: false
  - variable: storage.accessMode
    label: "Storage Access Mode"
    default: "ReadWriteMany"
    type: enum
    options:
    - "ReadWriteMany"
    - "ReadWriteOnce"
    required: true
- variable: additionalStorage.enabled
  label: "Additional Storage"
  description: "Storage not created with this deployment - PVC must exist before installing this release"
  default: false
  type: boolean
  group: "Additional Storage"
  show_subquestion_if: true
  subquestions:
  - variable: additionalStorage.pvc
    label: "Existing PVC Name"
    default: "shared-storage"
    type: string
    required: true
  - variable: additionalStorage.mountPath
    label: "Mount Path"
    default: "/mnt"
    type: string
    required: true
- variable: service.type
  label: "Service Type"
  default: "ClusterIP"
  group: "Network"
  type: enum
  options:
  - "ClusterIP"
  - "NodePort"
  - "LoadBalancer"
  required: true
- variable: service.ports
  label: "Ports"
  group: "Network"
  description: "Add ports: service port - target port"
  type: "map"
  default:
    "22": "22"
    "80": "80"
  required: true
- variable: ingress.enabled
  label: "Enable Ingress"
  default: false
  group: "Network"
  type: boolean
  show_subquestion_if: true
  subquestions:
  - variable: ingress.host
    description: "Service FQDN - remember to add it to DNS or hosts file"
    label: "Ingress FQDN"
    default: "my-service.ai.neuca.pl"
    type: string
  - variable: ingress.servicePort
    label: "Service Port Number"
    default: "80"
    type: string
  - variable: ingress.tls
    label: "Use SSL"
    default: true
    type: boolean
